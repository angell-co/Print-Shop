{# @var craft \craft\web\twig\variables\CraftVariable #}
{#
/**
 * Print Shop plugin for Craft CMS 3.x
 *
 * Print Shop Settings.twig
 *
 * @author    Angell & Co
 * @copyright Copyright (c) 2019 Angell & Co
 * @link      https://angell.io
 * @package   PrintShop
 * @since     2.0.0
 */
#}

{% import "_includes/forms" as forms %}

{% set volumeList = [] %}
{% for volume in volumes %}
    {% set volumeList = volumeList|merge([{'value': volume.uid, 'label': volume.name}]) %}
{% endfor %}

{% macro assetLocationInput(volumeOptions, volumeUid, volumeSubpath) %}
    {% from "_includes/forms" import select, text %}
    <div class="flex">
        <div>
            {{ select({
                id: 'volumeUid',
                name: 'volumeUid',
                options: volumeOptions,
                value: volumeUid,
            }) }}
        </div>
        <div class="flex-grow">
            {{ text({
                id: 'volumeSubpath',
                class: 'ltr',
                name: 'volumeSubpath',
                value: volumeSubpath,
                placeholder: "path/to/subfolder"|t('app')
            }) }}
        </div>
    </div>
{% endmacro %}

{% from _self import assetLocationInput %}

{% if volumeList %}
    {{ forms.field({
        first: true,
        label: "Files and Proofs Location"|t('print-shop'),
        instructions: "Where do you want to store line item files and proofs?"|t('print-shop')
    }, assetLocationInput(volumeList, settings.volumeUid ?? null, settings.volumeSubpath ?? null)) }}
{% else %}
    {{ forms.field({
        first: true,
        label: "Files and Proofs Location"|t('print-shop')
    }, '<p class="error">' ~ "No volumes exist yet."|t('app') ~ '</p>') }}
{% endif %}

{{ forms.lightswitchField({
    label: 'Show options JSON on Order tab'|t('print-shop'),
    id: 'showOptionsOnOrderTab',
    name: 'showOptionsOnOrderTab',
    on: settings.showOptionsOnOrderTab,
}) }}

{{ forms.lightswitchField({
    label: 'Enable Proofing System'|t('print-shop'),
    id: 'enableProofs',
    name: 'enableProofs',
    on: settings.enableProofs,
    toggle: 'proofing-settings'
}) }}

<div id="proofing-settings"{% if not settings.enableProofs %} class="hidden"{% endif %}>
    <hr>
    <h2>Proof Settings</h2>

    {% set emailsList = [] %}
    {% for email in commerceEmails %}
        {% set emailsList = emailsList|merge([{'value': email.uid, 'label': email.name}]) %}
    {% endfor %}

    {{ forms.selectField({
        label: 'Proof Update Email'|t('print-shop'),
        id: 'proofEmailUid',
        name: 'proofEmailUid',
        options: emailsList,
        value: settings.proofEmailUid ?? null,
    }) }}

    {% macro statusInput(orderStatuses, currentStatus, prefix) %}
        <div>
            <a id="{{ prefix }}-status-menu" class="btn menubtn" href="#">
                <span class="status {{ currentStatus.color }}"></span>{{ currentStatus.name }}
            </a>
            <div class="menu">
                <ul class="padded">
                    {% for status in orderStatuses %}
                        <li>
                            <a data-uid="{{ status.uid }}" data-color="{{ status.color }}" data-name="{{ status.name }}" {% if status.uid == currentStatus.uid %}class="sel"{% endif %} href="#">
                                <span class="status {{ status.color }}"></span>{{ status.name }}
                            </a>
                        </li>
                    {% endfor %}
                </ul>
            </div>
        </div>
    {% endmacro %}

    {% from _self import statusInput %}

    {% set orderStatuses = craft.commerce.orderStatuses.getAllOrderStatuses() %}

    {{ forms.hidden({
        id: 'proofsSentStatusUid',
        name: 'proofsSentStatusUid',
        value: proofsSentStatus.uid
    }) }}
    {{ forms.field({
        label: 'Proofs Sent Status'|t('print-shop'),
    }, statusInput(orderStatuses, proofsSentStatus, 'proofsSent')) }}

    {{ forms.hidden({
        id: 'proofsApprovedStatusUid',
        name: 'proofsApprovedStatusUid',
        value: proofsApprovedStatus.uid
    }) }}
    {{ forms.field({
        label: 'Proofs Approved Status'|t('print-shop'),
    }, statusInput(orderStatuses, proofsApprovedStatus, 'proofsApproved')) }}

    {{ forms.hidden({
        id: 'proofsRejectedStatusUid',
        name: 'proofsRejectedStatusUid',
        value: proofsRejectedStatus.uid
    }) }}
    {{ forms.field({
        label: 'Proofs Rejected Status'|t('print-shop'),
    }, statusInput(orderStatuses, proofsRejectedStatus, 'proofsRejected')) }}

</div>

{% js %}
    $(function () {
        var $proofsSentStatusMenu = $('#settings-proofsSent-status-menu');
        new Garnish.MenuBtn($proofsSentStatusMenu, {
            onOptionSelect: function(data){
                var uid = $(data).data('uid'),
                    name = $(data).data('name'),
                    color = $(data).data('color');
                $('#settings-proofsSentStatusUid').val(uid);

                var html = "<span class='status "+color+"'></span>"+name;
                $proofsSentStatusMenu.html(html);
            }
        });

        var $proofsApprovedStatusMenu = $('#settings-proofsApproved-status-menu');
        new Garnish.MenuBtn($proofsApprovedStatusMenu, {
            onOptionSelect: function(data){
                var uid = $(data).data('uid'),
                    name = $(data).data('name'),
                    color = $(data).data('color');
                $('#settings-proofsApprovedStatusUid').val(uid);

                var html = "<span class='status "+color+"'></span>"+name;
                $proofsApprovedStatusMenu.html(html);
            }
        });

        var $proofsRejectedStatusMenu = $('#settings-proofsRejected-status-menu');
        new Garnish.MenuBtn($proofsRejectedStatusMenu, {
            onOptionSelect: function(data){
                var uid = $(data).data('uid'),
                    name = $(data).data('name'),
                    color = $(data).data('color');
                $('#settings-proofsRejectedStatusUid').val(uid);

                var html = "<span class='status "+color+"'></span>"+name;
                $proofsRejectedStatusMenu.html(html);
            }
        });
    });
{% endjs %}
